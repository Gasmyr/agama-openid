// OpenId-based inbound identity flow
Flow org.gluu.inbound.openid
     Basepath ""
     Inputs opSettings uidPrefix
// Check if dynamic client registration is desired
When opSettings.dcr.enabled is true
     // Perform client registration and grab config data
     temp = Call org.gluu.inbound.oauth2.DCRUtil#registerClient opSettings.host opSettings.dcr.useCachedClient opSettings.oauth.redirectUri opSettings.oauth.scopes
     // Populate missing data in opSettings, eg. client creds
     opSettings.oauth = Call org.gluu.inbound.oauth2.OAuthParams#update opSettings.oauth temp
// Launch utility flow
obj = Trigger org.gluu.inbound.oauth2.AuthzCodeWithUserInfo opSettings.oauth
When obj.success is true
     // Extract profile data (leaves token stuff aside)
     obj.data = obj.data.profile
     // Do user provisioning and grab his uid
     uid = Call org.gluu.inbound.UserOnboardHelper#exec uidPrefix obj.data
     Finish uid
Finish obj